language: node_js
node_js: "6"

before_install:
  # decrypting the encrypted SSH private key and adding the key to the current ssh-agent to make any SSH-based command agnostic to the private key location
  - openssl aes-256-cbc -K $encrypted_47733f2c6cc3_key -iv $encrypted_47733f2c6cc3_iv -in .deploy_key.enc -out /tmp/deploy_key -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_key
  - ssh-add /tmp/deploy_key

  - if [[ `npm -v` == 3.10.8 ]]; then npm i -g npm@3.10.7; fi
  - npm --version
  - npm config set spin false

  # https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - sleep 3 # give xvfb some time to start

install:
  - npm install -g bower
  - npm install -g grunt-cli
  - gem install compass
  - cd ui && npm install
  - cat npm-debug.log || true
  - bower install

script: grunt bundle && grunt uglify-and-rename && grunt web

cache:
  directories:
  - ui/node_modules
  - ui/app/components

addons:
  ssh_known_hosts:
    - cmr-dev.jembi.org
    - cmr-staging.jembi.org
    
deploy:
  - provider: script
    script: ssh bahmni@cmr-dev.jembi.org 'cd ~/git/cameroon-openmrs-module-bahmniapps;git pull;cd ui;grunt compass'
    on:
      branch: dev
  - provider: script
    script: ssh bahmni@cmr-staging.jembi.org 'cd ~/git/cameroon-openmrs-module-bahmniapps;git pull;cd ui;grunt compass'
    on:
      branch: staging

notifications:
  email: false
